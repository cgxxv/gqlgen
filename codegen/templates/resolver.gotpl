package {{ .PackageName }}

import (
	%%%IMPORTS%%%

	{{ reserveImport "context"  }}
	{{ reserveImport "fmt"  }}
	{{ reserveImport "io"  }}
	{{ reserveImport "strconv"  }}
	{{ reserveImport "time"  }}
	{{ reserveImport "sync"  }}
	{{ reserveImport "errors"  }}
	{{ reserveImport "bytes"  }}

	{{ reserveImport "github.com/99designs/gqlgen/handler" }}
	{{ reserveImport "github.com/vektah/gqlparser" }}
	{{ reserveImport "github.com/vektah/gqlparser/ast" }}
	{{ reserveImport "github.com/99designs/gqlgen/graphql" }}
	{{ reserveImport "github.com/99designs/gqlgen/graphql/introspection" }}
)

type {{.ResolverType}} struct {}

{{ range $object := .Objects -}}
	{{- if $object.HasResolvers -}}
		func (r *{{$.ResolverType}}) {{$object.Definition.GQLType}}() {{ $object.ResolverInterface | ref }} {
			return &{{lcFirst $object.Definition.GQLType}}Resolver{r}
		}
	{{ end -}}
{{ end }}

{{ range $object := .Objects -}}
	{{- if $object.HasResolvers -}}
		type {{lcFirst $object.Definition.GQLType}}Resolver struct { *Resolver }

		{{ range $field := $object.Fields -}}
			{{- if $field.IsResolver -}}
			func (r *{{lcFirst $object.Definition.GQLType}}Resolver) {{ $field.ShortResolverDeclaration }} {
				panic("not implemented")
			}
			{{ end -}}
		{{ end -}}
	{{ end -}}
{{ end }}
